services:
  - name: cf-hasura
    type: web
    env: docker
    dockerfilePath: ./hasura/Dockerfile
    dockerContext: ./hasura
    # See https://hasura.io/docs/1.0/graphql/core/api-reference/health.html
    healthCheckPath: /healthz
    envVars:
      - key: HASURA_GRAPHQL_DATABASE_URL
        fromDatabase:
          name: elefante
          property: connectionString
      - key: HASURA_GRAPHQL_ADMIN_SECRET
        generateValue: true
      - key: API_HOST
        fromService:
          name: cf-api
          type: web
          property: host
      # Render is incredibly buggy/broken. Ports are all wrong. See https://community.render.com/t/service-cannot-reach-itself-via-host-port-combo/755/4?u=samuela
      - key: API_PORT
        value: 10000

      # If we don't set this then render will incorrectly infer it as 9691 since
      # the hasura/graphql-engine:vX.X.X.cli-migrations-v2 image first starts a
      # temporary server to run the appropriate migrations and metadata updates.
      - key: PORT
        value: 8080

  - name: cf-api
    type: web
    env: rust
    # See https://community.render.com/t/rust-environment-build-caching-doesnt-work-with-monorepos/910/5?u=samuela.
    buildCommand: cargo build --release --manifest-path=./api/Cargo.toml --target-dir=./target
    startCommand: cargo run --release --manifest-path=./api/Cargo.toml --target-dir=./target
    healthCheckPath: /healthz
    envVars:
      - key: HASURA_HOST
        fromService:
          name: cf-hasura
          type: web
          property: host
      # See See https://community.render.com/t/service-cannot-reach-itself-via-host-port-combo/755/4?u=samuela.
      - key: HASURA_PORT
        value: 10000
      - key: HASURA_GRAPHQL_ADMIN_SECRET
        fromService:
          name: cf-hasura
          type: web
          envVarKey: HASURA_GRAPHQL_ADMIN_SECRET
      - key: GITHUB_OAUTH_CLIENT_ID
        sync: false
      - key: GITHUB_OAUTH_CLIENT_SECRET
        sync: false
      - key: API_PASETO_SECRET_KEY
        # generateValue is problematic because we need the secret key to be a
        # specific length.
        sync: false

      - key: MIRRORS_DIR
        value: "/tmp/cf-mirrors"
      - key: RUST_LIB_BACKTRACE
        value: 1
      - key: RUST_BACKTRACE
        value: "full"
      - key: RUST_LOG
        value: "api=trace"

  - name: cf-web
    type: web
    env: static
    buildCommand: yarn --cwd web install --frozen-lockfile && yarn --cwd web relay && yarn --cwd web build
    staticPublishPath: ./web/build
    headers:
      - path: /*
        name: X-Frame-Options
        value: sameorigin
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

databases:
  # This is the Render name of the database, not the postgres name of the
  # database. Render may add a suffix. In our case that doesn't seem to be the
  # case: both are "elefante".
  - name: elefante
