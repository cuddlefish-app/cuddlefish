# Development config for postgres/hasura on Linux.

# See https://docs.docker.com/compose/compose-file/#compose-and-docker-compatibility-matrix for the latest version info.
version: "3.9"
services:
  postgres:
    # TODO: upgrade to 14
    image: postgres:11
    network_mode: host
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    # See https://hasura.io/docs/latest/graphql/core/migrations/advanced/auto-apply-migrations.html
    image: hasura/graphql-engine:v2.0.9.cli-migrations-v3
    depends_on:
      - "postgres"
    network_mode: host
    volumes:
      - type: bind
        source: ./migrations
        target: /hasura-migrations
      - type: bind
        source: ./metadata
        target: /hasura-metadata
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@localhost:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"

      # Default logging minus websocket-log:
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: "startup, http-log, webhook-log"

      # Don't enable DEV_MODE in prod!
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: hasurasecret

      # In prod, we use the cli-migrations-v2 version of the Docker image and
      # these values are set in the Dockerfile.
      HASURA_GRAPHQL_AUTH_HOOK: http://localhost:3001/hasura_auth_webhook
      API_GRAPHQL_ENDPOINT: http://localhost:3001/graphql

# See https://docs.docker.com/compose/compose-file/#volumes.
volumes:
  db_data:
