# Development config for postgres/hasura on macOS.

# We need a separate config file since `network_mode: host` doesn't work on
# macOS. See https://github.com/docker/for-mac/issues/155.

# See https://docs.docker.com/compose/compose-file/#compose-and-docker-compatibility-matrix for the latest version info.
version: "3.9"
services:
  postgres:
    image: postgres:14
    expose:
      - "5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword

  graphql-engine:
    build: .
    depends_on:
      - "postgres"
    ports:
      - "8080:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "postgres://postgres:postgrespassword@postgres:5432/postgres"

      # Default logging minus websocket-log:
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: "startup, http-log, webhook-log"

      # Don't enable DEV_MODE in prod! See https://hasura.io/docs/latest/graphql/core/deployment/graphql-engine-flags/config-examples.html#dev-mode
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: "hasurasecret"

      # On macOS, there's this thing where you need to do `host.docker.internal`
      # to escape Docker networking. It doesn't work on Linux however. Much
      # easier to use `network_mode: host` on Linux. Unfortunately I am not
      # aware of a cross-platform solution.
      # See eg https://docs.docker.com/docker-for-mac/networking/#use-cases-and-workarounds.

      API_HOST: "host.docker.internal"
      API_PORT: 3001
      NEXT_HOST: "host.docker.internal"
      NEXT_PORT: 3002

# See https://docs.docker.com/compose/compose-file/#volumes.
volumes:
  db_data:
